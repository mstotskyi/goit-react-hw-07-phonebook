{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Loader/Loader.module.css","redux/actions.js","redux/reducers.js","redux/contactsApi.js","redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem.js","redux/selectors.js","components/Loader/Loader.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","changefilter","createAction","filterReducer","createReducer","actions","_","payload","contactsApi","createApi","reducerPath","tagTypes","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getContacts","query","providesTags","result","map","type","id","addContact","mutation","obj","url","method","body","invalidatesTags","deleteContact","useGetContactsQuery","useAddContactMutation","useDeleteContactMutation","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","ContactForm","useState","name","setName","number","setNumber","contacts","addNewContact","IdName","uuid","IdNumber","handleOnChange","e","target","value","resetForm","onSubmit","preventDefault","some","element","toLocaleLowerCase","alert","className","styles","form","htmlFor","label","formInput","pattern","title","required","onChange","Filter","IdFilter","dispatch","useDispatch","ContactItem","contactName","contactDeleteBtn","onClick","getFilter","state","filter","Spiner","color","height","width","timeout","loader","Component","ContactList","data","isLoading","console","log","useSelector","contactList","contact","includes","contactListItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f847d092.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__10gBv\",\"contactListItem\":\"ContactList_contactListItem__350E-\",\"contactDeleteBtn\":\"ContactList_contactDeleteBtn__1KRm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__OqivC\",\"label\":\"ContactForm_label__1Ze1a\",\"formInput\":\"ContactForm_formInput__f-J7q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3osKh\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changefilter = createAction('Changefilter');\r\n","// import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\n\r\nconst filterReducer = createReducer('', {\r\n  [actions.changefilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default filterReducer;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactsApi = createApi({\r\n  reducerPath: 'contacts',\r\n  tagTypes: ['Contacts'],\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://6196c970af46280017e7e29d.mockapi.io/api/v1',\r\n  }),\r\n  endpoints: builder => ({\r\n    getContacts: builder.query({\r\n      query: () => `/contacts`,\r\n      providesTags: result =>\r\n        result\r\n          ? [\r\n              ...result.map(({ id }) => ({ type: 'Contacts', id })),\r\n              { type: 'Contacts', id: 'LIST' },\r\n            ]\r\n          : [{ type: 'Contacts', id: 'LIST' }],\r\n    }),\r\n    addContact: builder.mutation({\r\n      query: obj => ({\r\n        url: 'contacts',\r\n        method: 'POST',\r\n        body: obj,\r\n      }),\r\n      invalidatesTags: [{ type: 'Contacts', id: 'LIST' }],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: id => ({\r\n        url: `contacts/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: [{ type: 'Contacts', id: 'LIST' }],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetContactsQuery,\r\n  useAddContactMutation,\r\n  useDeleteContactMutation,\r\n} = contactsApi;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport filterReducer from './reducers';\r\nimport logger from 'redux-logger';\r\nimport { contactsApi } from './contactsApi';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n  contactsApi.middleware,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    [contactsApi.reducerPath]: contactsApi.reducer,\r\n    filter: filterReducer,\r\n  },\r\n  middleware,\r\n});\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store };\r\n","import { useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styles from 'components/ContactForm/ContactForm.module.css';\r\nimport { useGetContactsQuery, useAddContactMutation } from 'redux/contactsApi';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const { contacts = [] } = useGetContactsQuery();\r\n  const [addNewContact] = useAddContactMutation();\r\n\r\n  const IdName = uuid();\r\n  const IdNumber = uuid();\r\n\r\n  const handleOnSubmit = e => {\r\n    e.preventDefault();\r\n    const obj = {\r\n      name: name,\r\n      number: number,\r\n    };\r\n    const existedContact = contacts.some(\r\n      element =>\r\n        element.name.toLocaleLowerCase() === obj.name.toLocaleLowerCase(),\r\n    );\r\n\r\n    if (existedContact) {\r\n      return alert(`${obj.name} is already in the contact list`);\r\n    }\r\n    addNewContact(obj);\r\n    resetForm();\r\n  };\r\n\r\n  const handleOnChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.target.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleOnSubmit} className={styles.form}>\r\n      <label htmlFor={IdName} className={styles.label}>\r\n        Name\r\n      </label>\r\n      <br />\r\n      <input\r\n        className={styles.formInput}\r\n        id={IdName}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={name}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        onChange={handleOnChange}\r\n      />\r\n      <br />\r\n      <label htmlFor={IdNumber} className={styles.label}>\r\n        Number\r\n      </label>\r\n      <br />\r\n      <input\r\n        className={styles.formInput}\r\n        id={IdNumber}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        value={number}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        onChange={handleOnChange}\r\n      />\r\n      <br />\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n","import { v4 as uuid } from 'uuid';\r\nimport * as actions from '../../redux/actions';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport default function Filter() {\r\n  const IdFilter = uuid();\r\n  const dispatch = useDispatch();\r\n\r\n  const changefilter = e => dispatch(actions.changefilter(e.target.value));\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={IdFilter}>Find contacts by name</label>\r\n      <br />\r\n      <input\r\n        id={IdFilter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        onChange={changefilter}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport styles from 'components/ContactList/ContactList.module.css';\r\nimport { useDeleteContactMutation } from 'redux/contactsApi';\r\n\r\nexport default function ContactItem({ number, id, name }) {\r\n  const [deleteContact] = useDeleteContactMutation(id);\r\n\r\n  return (\r\n    <>\r\n      <span className={styles.contactName}>{name}:</span>\r\n      <span> {number}</span>\r\n      <button\r\n        className={styles.contactDeleteBtn}\r\n        type=\"button\"\r\n        id={id}\r\n        onClick={() => {\r\n          deleteContact(id);\r\n        }}\r\n      >\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n","export const getFilter = state => state.filter;\r\n","import Loader from 'react-loader-spinner';\r\nimport { Component } from 'react';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport styles from 'components/Loader/Loader.module.css';\r\n\r\nexport default class Spiner extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"TailSpin\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={100000}\r\n        className={styles.loader} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import ContactItem from 'components/ContactList/ContactItem';\r\nimport styles from 'components/ContactList/ContactList.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport { useGetContactsQuery } from '../../redux/contactsApi';\r\nimport Loader from 'components/Loader/Loader';\r\n\r\nexport default function ContactList() {\r\n  const { data = [], isLoading } = useGetContactsQuery();\r\n  console.log(data);\r\n  const filter = useSelector(getFilter);\r\n  console.log(filter);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loader />}\r\n      {data && !isLoading && (\r\n        <ul className={styles.contactList}>\r\n          {data\r\n            .filter(contact =>\r\n              contact.name\r\n                .toLocaleLowerCase()\r\n                .includes(filter.toLocaleLowerCase()),\r\n            )\r\n            .map(contact => (\r\n              <li key={contact.id} className={styles.contactListItem}>\r\n                <ContactItem\r\n                  id={contact.id}\r\n                  name={contact.name}\r\n                  number={contact.number}\r\n                />\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import './App.css';\r\nimport React from 'react';\r\nimport ContactForm from 'components/ContactForm/ContactForm';\r\nimport Filter from 'components/Filter/Filter';\r\nimport ContactList from 'components/ContactList/ContactList';\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Phonebook\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <div className=\"contacts-wrapper\">\r\n          <h2 className=\"contacts-title\">Contacts</h2>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n// import actions from 'redux/actions';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n      {/* </PersistGate> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}